{"version":3,"sources":["components/Add.js","components/Multiply.js","App.js","serviceWorker.js","index.js"],"names":["getRandomInteger","Math","floor","random","Add","state","number1","number2","operation","inputValue","answers","seconds","timesUp","score","highScore","localStorage","getItem","checkHighScoreA","_this","setItem","setState","tick","document","getElementById","disabled","interval","setInterval","prevState","clearInterval","filter","x","length","handleChange","e","target","value","handleSubmit","preventDefault","correctAnswer","parseInt","concat","console","log","this","react_default","a","createElement","className","onClick","onSubmit","autoComplete","type","id","onChange","Component","Multiply","checkHighScoreM","App","src_components_Add","src_components_Multiply","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3cc41b42.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport './Add.css'\n\nconst getRandomInteger = () => {\n  return Math.floor(Math.random()*10)\n}\n\nclass Add extends Component {\n  state = {\n    number1: 'Addition',\n    number2: null,\n    operation: null,\n    inputValue: '',\n    answers: [],\n    seconds: 60,\n    timesUp: false,\n    score: 0,\n    highScore: localStorage.getItem('highScoreA')\n  }\n  checkHighScoreA = () => {\n    if (this.state.highScore > 0) {\n      if (this.state.score > this.state.highScore) {\n        localStorage.setItem('highScoreA', this.state.score)\n        this.setState({\n          highScore: localStorage.getItem('highScoreA')\n        })\n      };\n    }\n    else {\n      localStorage.setItem('highScoreA', this.state.score);\n      this.setState({\n        highScore: localStorage.getItem('highScoreA')\n      })\n    }\n  }\n  tick = () => {\n    document.getElementById('input-add').disabled=false;\n    this.setState({\n      number1: getRandomInteger(),\n      number2: getRandomInteger(),\n      operation: '+',\n      seconds: 60,\n      score: 0\n    });\n    this.interval = setInterval(() => {\n      this.setState(prevState => ({\n        seconds: (prevState.seconds === 0) ? prevState.seconds : prevState.seconds - 1\n      }));\n    if(this.state.seconds===0) {\n      clearInterval(this.interval)\n      this.setState({\n        number1: 'Times Up!',\n        number2: '',\n        operation: '',\n        score: this.state.answers.filter(x => x === 'Right').length,\n        answers: []\n      });\n      this.checkHighScoreA();\n      document.getElementById('input-add').disabled=true;\n      }\n    }, 1000);\n  }\n  handleChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let correctAnswer = this.state.number1+this.state.number2;\n\n    if (parseInt(this.state.inputValue) === correctAnswer) {\n      this.setState({\n        answers: this.state.answers.concat(['Right'])\n      }, function() {\n        console.log(this.state.answers)\n      })\n    } else {\n      this.setState({\n        answers: this.state.answers.concat(['Wrong'])\n      }, function() {\n        console.log(this.state.answers)\n      })\n    }\n    this.setState({\n      number1: getRandomInteger(),\n      number2: getRandomInteger(),\n      operation: '+',\n      inputValue: ''\n    })\n  }\n  render() {\n    return (\n      <div className=\"App-add\">\n        <h2 className=\"output\">{this.state.number1}{this.state.operation}{this.state.number2}</h2>\n        <h2 className=\"time\">Seconds: {this.state.seconds}</h2>\n        <button onClick={this.tick}>Start</button>\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n          <input type=\"text\" id=\"input-add\" className=\"input\" value={this.state.inputValue} onChange={this.handleChange} disabled={true}/>\n        </form>\n        <h2 className=\"scores\">Score:\n          <span className=\"score\">{this.state.score}\n          </span> HighScore:\n          <span className=\"highscore\">{localStorage.getItem('highScoreA')}\n          </span> </h2>\n      </div>\n    );\n  }\n}\n\nexport default Add;\n","import React, {Component} from 'react'\nimport './Multiply.css'\n\nconst getRandomInteger = () => {\n  return Math.floor(Math.random()*10)\n}\n\nclass Multiply extends Component {\n  state = {\n    number1: 'Multiplication',\n    number2: '',\n    operation: '',\n    inputValue: '',\n    answers: [],\n    seconds: 60,\n    timesUp: false,\n    score: 0,\n    highScore: localStorage.getItem('highScoreM')\n  }\n  checkHighScoreM = () => {\n    if (this.state.highScore > 0) {\n      if (this.state.score > this.state.highScore) {\n        localStorage.setItem('highScoreM', this.state.score)\n        this.setState({\n          highScore: localStorage.getItem('highScoreM')\n        })\n      };\n    }\n    else {\n      localStorage.setItem('highScoreM', this.state.score);\n      this.setState({\n        highScore: localStorage.getItem('highScoreM')\n      })\n    }\n  }\n  tick = () => {\n    document.getElementById('input-multiply').disabled=false;\n    this.setState({\n      number1: getRandomInteger(),\n      number2: getRandomInteger(),\n      operation: 'x',\n      seconds: 60,\n      score: 0\n    });\n    this.interval = setInterval(() => {\n      this.setState(prevState => ({\n        seconds: (prevState.seconds === 0) ? prevState.seconds : prevState.seconds - 1\n      }));\n    if(this.state.seconds===0) {\n      clearInterval(this.interval)\n      this.setState({\n        number1: 'Times Up!',\n        number2: '',\n        operation: '',\n        score: this.state.answers.filter(x => x === 'Right').length,\n        answers: []\n      });\n      this.checkHighScoreM();\n      document.getElementById('input-multiply').disabled=true;\n      }\n    }, 1000);\n  }\n  handleChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let correctAnswer = this.state.number1*this.state.number2;\n\n    if (parseInt(this.state.inputValue) === correctAnswer) {\n      this.setState({\n        answers: this.state.answers.concat(['Right'])\n      }, function() {\n        console.log(this.state.answers)\n      })\n    } else {\n      this.setState({\n        answers: this.state.answers.concat(['Wrong'])\n      }, function() {\n        console.log(this.state.answers)\n      })\n    }\n    this.setState({\n      number1: getRandomInteger(),\n      number2: getRandomInteger(),\n      operation: 'x',\n      inputValue: ''\n    })\n  }\n  render() {\n    return (\n      <div className=\"App-multiply\">\n        <h2 className=\"output\">{this.state.number1}{this.state.operation}{this.state.number2}</h2>\n        <h2 className=\"time\">Seconds: {this.state.seconds}</h2>\n        <button onClick={this.tick}>Start</button>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" id=\"input-multiply\" className=\"input\" value={this.state.inputValue} onChange={this.handleChange} disabled={true} autoComplete=\"off\"/>\n        </form>\n        <h2 className=\"scores\">Score:\n          <span className=\"score\">\n            {this.state.score}\n          </span> HighScore:\n          <span className=\"highscore\">\n            {localStorage.getItem('highScoreM')}\n          </span>\n            </h2>\n      </div>\n    );\n  }\n}\n\nexport default Multiply;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Add from './components/Add'\nimport Multiply from './components/Multiply'\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>Mad Minutes</h1>\n    <Add />\n    <Multiply />\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}